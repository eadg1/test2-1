---
- hosts: all
  become: true
  tasks:
  - name: Install for apt via  HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
  
  - name: Create web user
    user:
     name: web
     shell: /bin/bash
  - name: Add authorized keys
    authorized_key:
       user: web
       key:   "{{ lookup('file', 'files/key.pub') }}"
       
  - name: Make sure we have a 'deployers' group
    group:
     name: deployers
     state: present

  - name: Allow 'deployers' passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%deployers'
      line: '%deployers ALL=(ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'
  - name: Add sudoers
    user:
      name=web
      groups=deployers
      append=yes
      
  - name: install nginx and deps
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - python3-pip 
      - python3-dev 
      - build-essential 
      - libssl-dev 
      - libffi-dev 
      - python3-setuptools
      - python3-venv
      - nginx
      - uwsgi
      - uwsgi-plugin-python3
      
  - name: Create a directory if it does not exist
    file:
      path: /home/web/www
      state: directory
      mode: '0775'
      group: www-data
      owner: web
     
  - name: Create www directory
    file:
      path: /var/www
      state: directory
      mode: '0775'
  - name: Create symbolic link 
    file:
      src: /home/web/www
      dest: /var/www/app
      state: link
  - name: Python virtualEnv
    shell: |
             cd /home/web/www
             pip3 install flask
             chown -R web /home/web
